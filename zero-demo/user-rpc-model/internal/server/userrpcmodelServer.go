// Code generated by goctl. DO NOT EDIT!
// Source: userrpcmodel.proto

package server

import (
	"context"

	"zero-demo/user-rpc-model/internal/logic"
	"zero-demo/user-rpc-model/internal/svc"
	"zero-demo/user-rpc-model/pb"
)

type UserrpcmodelServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserrpcmodelServer
}

func NewUserrpcmodelServer(svcCtx *svc.ServiceContext) *UserrpcmodelServer {
	return &UserrpcmodelServer{
		svcCtx: svcCtx,
	}
}

// -----------------------newTable-----------------------
func (s *UserrpcmodelServer) AddUser(ctx context.Context, in *pb.AddUserReq) (*pb.AddUserResp, error) {
	l := logic.NewAddUserLogic(ctx, s.svcCtx)
	return l.AddUser(in)
}

func (s *UserrpcmodelServer) UpdateUser(ctx context.Context, in *pb.UpdateUserReq) (*pb.UpdateUserResp, error) {
	l := logic.NewUpdateUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(in)
}

func (s *UserrpcmodelServer) DelUser(ctx context.Context, in *pb.DelUserReq) (*pb.DelUserResp, error) {
	l := logic.NewDelUserLogic(ctx, s.svcCtx)
	return l.DelUser(in)
}

func (s *UserrpcmodelServer) GetUserById(ctx context.Context, in *pb.GetUserByIdReq) (*pb.GetUserByIdResp, error) {
	l := logic.NewGetUserByIdLogic(ctx, s.svcCtx)
	return l.GetUserById(in)
}

func (s *UserrpcmodelServer) SearchUser(ctx context.Context, in *pb.SearchUserReq) (*pb.SearchUserResp, error) {
	l := logic.NewSearchUserLogic(ctx, s.svcCtx)
	return l.SearchUser(in)
}

// -----------------------newTable-----------------------
func (s *UserrpcmodelServer) AddUserData(ctx context.Context, in *pb.AddUserDataReq) (*pb.AddUserDataResp, error) {
	l := logic.NewAddUserDataLogic(ctx, s.svcCtx)
	return l.AddUserData(in)
}

func (s *UserrpcmodelServer) UpdateUserData(ctx context.Context, in *pb.UpdateUserDataReq) (*pb.UpdateUserDataResp, error) {
	l := logic.NewUpdateUserDataLogic(ctx, s.svcCtx)
	return l.UpdateUserData(in)
}

func (s *UserrpcmodelServer) DelUserData(ctx context.Context, in *pb.DelUserDataReq) (*pb.DelUserDataResp, error) {
	l := logic.NewDelUserDataLogic(ctx, s.svcCtx)
	return l.DelUserData(in)
}

func (s *UserrpcmodelServer) GetUserDataById(ctx context.Context, in *pb.GetUserDataByIdReq) (*pb.GetUserDataByIdResp, error) {
	l := logic.NewGetUserDataByIdLogic(ctx, s.svcCtx)
	return l.GetUserDataById(in)
}

func (s *UserrpcmodelServer) SearchUserData(ctx context.Context, in *pb.SearchUserDataReq) (*pb.SearchUserDataResp, error) {
	l := logic.NewSearchUserDataLogic(ctx, s.svcCtx)
	return l.SearchUserData(in)
}
