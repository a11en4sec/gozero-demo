// Code generated by goctl. DO NOT EDIT!
// Source: userrpcmodel.proto

package userrpcmodel

import (
	"context"

	"zero-demo/user-rpc-model/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddUserDataReq      = pb.AddUserDataReq
	AddUserDataResp     = pb.AddUserDataResp
	AddUserReq          = pb.AddUserReq
	AddUserResp         = pb.AddUserResp
	DelUserDataReq      = pb.DelUserDataReq
	DelUserDataResp     = pb.DelUserDataResp
	DelUserReq          = pb.DelUserReq
	DelUserResp         = pb.DelUserResp
	GetUserByIdReq      = pb.GetUserByIdReq
	GetUserByIdResp     = pb.GetUserByIdResp
	GetUserDataByIdReq  = pb.GetUserDataByIdReq
	GetUserDataByIdResp = pb.GetUserDataByIdResp
	SearchUserDataReq   = pb.SearchUserDataReq
	SearchUserDataResp  = pb.SearchUserDataResp
	SearchUserReq       = pb.SearchUserReq
	SearchUserResp      = pb.SearchUserResp
	UpdateUserDataReq   = pb.UpdateUserDataReq
	UpdateUserDataResp  = pb.UpdateUserDataResp
	UpdateUserReq       = pb.UpdateUserReq
	UpdateUserResp      = pb.UpdateUserResp
	User                = pb.User
	UserData            = pb.UserData

	Userrpcmodel interface {
		// -----------------------newTable-----------------------
		AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserResp, error)
		UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserResp, error)
		DelUser(ctx context.Context, in *DelUserReq, opts ...grpc.CallOption) (*DelUserResp, error)
		GetUserById(ctx context.Context, in *GetUserByIdReq, opts ...grpc.CallOption) (*GetUserByIdResp, error)
		SearchUser(ctx context.Context, in *SearchUserReq, opts ...grpc.CallOption) (*SearchUserResp, error)
		// -----------------------newTable-----------------------
		AddUserData(ctx context.Context, in *AddUserDataReq, opts ...grpc.CallOption) (*AddUserDataResp, error)
		UpdateUserData(ctx context.Context, in *UpdateUserDataReq, opts ...grpc.CallOption) (*UpdateUserDataResp, error)
		DelUserData(ctx context.Context, in *DelUserDataReq, opts ...grpc.CallOption) (*DelUserDataResp, error)
		GetUserDataById(ctx context.Context, in *GetUserDataByIdReq, opts ...grpc.CallOption) (*GetUserDataByIdResp, error)
		SearchUserData(ctx context.Context, in *SearchUserDataReq, opts ...grpc.CallOption) (*SearchUserDataResp, error)
	}

	defaultUserrpcmodel struct {
		cli zrpc.Client
	}
)

func NewUserrpcmodel(cli zrpc.Client) Userrpcmodel {
	return &defaultUserrpcmodel{
		cli: cli,
	}
}

// -----------------------newTable-----------------------
func (m *defaultUserrpcmodel) AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserResp, error) {
	client := pb.NewUserrpcmodelClient(m.cli.Conn())
	return client.AddUser(ctx, in, opts...)
}

func (m *defaultUserrpcmodel) UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserResp, error) {
	client := pb.NewUserrpcmodelClient(m.cli.Conn())
	return client.UpdateUser(ctx, in, opts...)
}

func (m *defaultUserrpcmodel) DelUser(ctx context.Context, in *DelUserReq, opts ...grpc.CallOption) (*DelUserResp, error) {
	client := pb.NewUserrpcmodelClient(m.cli.Conn())
	return client.DelUser(ctx, in, opts...)
}

func (m *defaultUserrpcmodel) GetUserById(ctx context.Context, in *GetUserByIdReq, opts ...grpc.CallOption) (*GetUserByIdResp, error) {
	client := pb.NewUserrpcmodelClient(m.cli.Conn())
	return client.GetUserById(ctx, in, opts...)
}

func (m *defaultUserrpcmodel) SearchUser(ctx context.Context, in *SearchUserReq, opts ...grpc.CallOption) (*SearchUserResp, error) {
	client := pb.NewUserrpcmodelClient(m.cli.Conn())
	return client.SearchUser(ctx, in, opts...)
}

// -----------------------newTable-----------------------
func (m *defaultUserrpcmodel) AddUserData(ctx context.Context, in *AddUserDataReq, opts ...grpc.CallOption) (*AddUserDataResp, error) {
	client := pb.NewUserrpcmodelClient(m.cli.Conn())
	return client.AddUserData(ctx, in, opts...)
}

func (m *defaultUserrpcmodel) UpdateUserData(ctx context.Context, in *UpdateUserDataReq, opts ...grpc.CallOption) (*UpdateUserDataResp, error) {
	client := pb.NewUserrpcmodelClient(m.cli.Conn())
	return client.UpdateUserData(ctx, in, opts...)
}

func (m *defaultUserrpcmodel) DelUserData(ctx context.Context, in *DelUserDataReq, opts ...grpc.CallOption) (*DelUserDataResp, error) {
	client := pb.NewUserrpcmodelClient(m.cli.Conn())
	return client.DelUserData(ctx, in, opts...)
}

func (m *defaultUserrpcmodel) GetUserDataById(ctx context.Context, in *GetUserDataByIdReq, opts ...grpc.CallOption) (*GetUserDataByIdResp, error) {
	client := pb.NewUserrpcmodelClient(m.cli.Conn())
	return client.GetUserDataById(ctx, in, opts...)
}

func (m *defaultUserrpcmodel) SearchUserData(ctx context.Context, in *SearchUserDataReq, opts ...grpc.CallOption) (*SearchUserDataResp, error) {
	client := pb.NewUserrpcmodelClient(m.cli.Conn())
	return client.SearchUserData(ctx, in, opts...)
}
