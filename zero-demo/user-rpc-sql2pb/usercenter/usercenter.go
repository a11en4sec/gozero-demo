// Code generated by goctl. DO NOT EDIT!
// Source: usercenter.proto

package usercenter

import (
	"context"

	"zero-demo/user-rpc-sql2pb/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddUserAuthReq      = pb.AddUserAuthReq
	AddUserAuthResp     = pb.AddUserAuthResp
	AddUserReq          = pb.AddUserReq
	AddUserResp         = pb.AddUserResp
	DelUserAuthReq      = pb.DelUserAuthReq
	DelUserAuthResp     = pb.DelUserAuthResp
	DelUserReq          = pb.DelUserReq
	DelUserResp         = pb.DelUserResp
	GetUserAuthByIdReq  = pb.GetUserAuthByIdReq
	GetUserAuthByIdResp = pb.GetUserAuthByIdResp
	GetUserByIdReq      = pb.GetUserByIdReq
	GetUserByIdResp     = pb.GetUserByIdResp
	SearchUserAuthReq   = pb.SearchUserAuthReq
	SearchUserAuthResp  = pb.SearchUserAuthResp
	SearchUserReq       = pb.SearchUserReq
	SearchUserResp      = pb.SearchUserResp
	UpdateUserAuthReq   = pb.UpdateUserAuthReq
	UpdateUserAuthResp  = pb.UpdateUserAuthResp
	UpdateUserReq       = pb.UpdateUserReq
	UpdateUserResp      = pb.UpdateUserResp
	User                = pb.User
	UserAuth            = pb.UserAuth

	Usercenter interface {
		// -----------------------用户表-----------------------
		AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserResp, error)
		UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserResp, error)
		DelUser(ctx context.Context, in *DelUserReq, opts ...grpc.CallOption) (*DelUserResp, error)
		GetUserById(ctx context.Context, in *GetUserByIdReq, opts ...grpc.CallOption) (*GetUserByIdResp, error)
		SearchUser(ctx context.Context, in *SearchUserReq, opts ...grpc.CallOption) (*SearchUserResp, error)
		// -----------------------用户授权表-----------------------
		AddUserAuth(ctx context.Context, in *AddUserAuthReq, opts ...grpc.CallOption) (*AddUserAuthResp, error)
		UpdateUserAuth(ctx context.Context, in *UpdateUserAuthReq, opts ...grpc.CallOption) (*UpdateUserAuthResp, error)
		DelUserAuth(ctx context.Context, in *DelUserAuthReq, opts ...grpc.CallOption) (*DelUserAuthResp, error)
		GetUserAuthById(ctx context.Context, in *GetUserAuthByIdReq, opts ...grpc.CallOption) (*GetUserAuthByIdResp, error)
		SearchUserAuth(ctx context.Context, in *SearchUserAuthReq, opts ...grpc.CallOption) (*SearchUserAuthResp, error)
	}

	defaultUsercenter struct {
		cli zrpc.Client
	}
)

func NewUsercenter(cli zrpc.Client) Usercenter {
	return &defaultUsercenter{
		cli: cli,
	}
}

// -----------------------用户表-----------------------
func (m *defaultUsercenter) AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.AddUser(ctx, in, opts...)
}

func (m *defaultUsercenter) UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.UpdateUser(ctx, in, opts...)
}

func (m *defaultUsercenter) DelUser(ctx context.Context, in *DelUserReq, opts ...grpc.CallOption) (*DelUserResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.DelUser(ctx, in, opts...)
}

func (m *defaultUsercenter) GetUserById(ctx context.Context, in *GetUserByIdReq, opts ...grpc.CallOption) (*GetUserByIdResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserById(ctx, in, opts...)
}

func (m *defaultUsercenter) SearchUser(ctx context.Context, in *SearchUserReq, opts ...grpc.CallOption) (*SearchUserResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.SearchUser(ctx, in, opts...)
}

// -----------------------用户授权表-----------------------
func (m *defaultUsercenter) AddUserAuth(ctx context.Context, in *AddUserAuthReq, opts ...grpc.CallOption) (*AddUserAuthResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.AddUserAuth(ctx, in, opts...)
}

func (m *defaultUsercenter) UpdateUserAuth(ctx context.Context, in *UpdateUserAuthReq, opts ...grpc.CallOption) (*UpdateUserAuthResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.UpdateUserAuth(ctx, in, opts...)
}

func (m *defaultUsercenter) DelUserAuth(ctx context.Context, in *DelUserAuthReq, opts ...grpc.CallOption) (*DelUserAuthResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.DelUserAuth(ctx, in, opts...)
}

func (m *defaultUsercenter) GetUserAuthById(ctx context.Context, in *GetUserAuthByIdReq, opts ...grpc.CallOption) (*GetUserAuthByIdResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserAuthById(ctx, in, opts...)
}

func (m *defaultUsercenter) SearchUserAuth(ctx context.Context, in *SearchUserAuthReq, opts ...grpc.CallOption) (*SearchUserAuthResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.SearchUserAuth(ctx, in, opts...)
}
